/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-09-16 12:40:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class check_005fid_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/D:/localProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1598526168805L));
    _jspx_dependants.put("jar:file:/D:/localProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/jsp/member/../../include/include.jsp", Long.valueOf(1600257781627L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html> \r\n");
      out.write("<html> \r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\r<!-- for jQuery -->\r<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/jquery/jquery.min.js\"></script>\r<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery.serialize-object.js\"></script>\r<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\r<!-- Bootstrap core CSS -->\r<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\">\r\r<!-- Custom styles for this template -->\r<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/simple-sidebar.css\" rel=\"stylesheet\">\r\r<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/semantic.min.css\" rel=\"stylesheet\">\r\r");
      out.write("\r \r<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/font-awesome.min.css\" rel=\"stylesheet\">\r<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/ionicons.min.css\" rel=\"stylesheet\">\r\r\r\r<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/semantic.min.js\"></script>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>아이디 중복 체크</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t#wrap {\r\n");
      out.write("\t\twidth: 490px;\r\n");
      out.write("\t\ttext-align :center;\r\n");
      out.write("\t\tmargin: 0 auto 0 auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t#chk{\r\n");
      out.write("\t\ttext-align :center;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t$('#useBtn').attr('disabled',true);\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("function pValue(){\r\n");
      out.write("\tdocument.getElementById(\"userId\").value = opener.document.paramForm.u_id.value;\r\n");
      out.write("}\r\n");
      out.write("\t\t\r\n");
      out.write("function idCheck(){\r\n");
      out.write("\tvar id = document.getElementById(\"userId\").value;\r\n");
      out.write("\t\r\n");
      out.write("\tif (!id) {\r\n");
      out.write("\t\talert(\"아이디를 입력하지 않았습니다.\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t} \r\n");
      out.write("\telse if((id < \"0\" || id > \"9\") && (id < \"A\" || id > \"Z\") && (id < \"a\" || id > \"z\")){ \r\n");
      out.write("\t\talert(\"한글 및 특수문자는 아이디로 사용하실 수 없습니다.\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\telse\r\n");
      out.write("\t{\r\n");
      out.write("\t\tvar json = {\r\n");
      out.write("\t\t\t\tu_id : id,\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\tcontentType: 'application/json',\r\n");
      out.write("\t\t\turl : \"check_id.do\",\r\n");
      out.write("\t\t\tdata : JSON.stringify(json),\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tswitch (Number(data)) {\r\n");
      out.write("\t\t\t\tcase 0:\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"msg\").innerHTML = \"사용 가능한 아이디입니다.\";\r\n");
      out.write("\t\t\t\t\t$('#useBtn').attr('disabled',false);\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\tdefault:\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"msg\").innerHTML = \"사용할 수 없는 아이디입니다.\";\r\n");
      out.write("\t\t\t\t\t$('#useBtn').attr('disabled',true);\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(error) {\r\n");
      out.write("\t\t\t\talert(\"오류 발생\"+ error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("// 사용하기 클릭 시 부모창으로 값 전달 \r\n");
      out.write("function sendCheckValue(){\r\n");
      out.write("\topener.document.paramForm.idDuplication.value =\"idCheck\";\r\n");
      out.write("\t// 회원가입 화면의 ID입력란에 값을 전달\r\n");
      out.write("\topener.document.paramForm.u_id.value = document.getElementById(\"userId\").value;\r\n");
      out.write("\t\r\n");
      out.write("\tif (opener != null) {\r\n");
      out.write("      \topener.chkForm = null;\r\n");
      out.write("      \tself.close();\r\n");
      out.write("\t}\t\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"pValue()\">\r\n");
      out.write("<div id=\"wrap\" style=\"margin-top: 20px;\">\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<b><font size=\"4\" color=\"gray\">아이디 중복체크</font></b>\r\n");
      out.write("\t<hr size=\"1\" width=\"460\">\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div id=\"chk\">\r\n");
      out.write("\t\t<form id=\"checkForm\">\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"idinput\" id=\"userId\" style=\"border-width: thin; height:30px\">\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"중복확인\" style=\"height:30px;\" onclick=\"idCheck()\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<div id=\"msg\" style=\"margin-top: 20px;\"></div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<button type=\"button\" class=\"btn btn-info\" id=\"useBtn\" style=\"height:25px; line-height: 1;\" onclick=\"sendCheckValue()\">사용하기</button>\r\n");
      out.write("\t\t<button type=\"button\" class=\"btn btn-info\" id=\"cancelBtn\" style=\"width:76px; height:25px; line-height: 1;\" onclick=\"window.close()\">취소</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
